// Code generated by ent, DO NOT EDIT.

package ent

import (
	"main/ent/schema"
	"main/ent/target"

	"github.com/google/uuid"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	targetFields := schema.Target{}.Fields()
	_ = targetFields
	// targetDescIntervalSeconds is the schema descriptor for interval_seconds field.
	targetDescIntervalSeconds := targetFields[3].Descriptor()
	// target.IntervalSecondsValidator is a validator for the "interval_seconds" field. It is called by the builders before save.
	target.IntervalSecondsValidator = targetDescIntervalSeconds.Validators[0].(func(uint32) error)
	// targetDescTimeoutSeconds is the schema descriptor for timeout_seconds field.
	targetDescTimeoutSeconds := targetFields[4].Descriptor()
	// target.TimeoutSecondsValidator is a validator for the "timeout_seconds" field. It is called by the builders before save.
	target.TimeoutSecondsValidator = targetDescTimeoutSeconds.Validators[0].(func(uint32) error)
	// targetDescPort is the schema descriptor for port field.
	targetDescPort := targetFields[7].Descriptor()
	// target.PortValidator is a validator for the "port" field. It is called by the builders before save.
	target.PortValidator = targetDescPort.Validators[0].(func(uint32) error)
	// targetDescID is the schema descriptor for id field.
	targetDescID := targetFields[0].Descriptor()
	// target.DefaultID holds the default value on creation for the id field.
	target.DefaultID = targetDescID.Default.(func() uuid.UUID)
}
